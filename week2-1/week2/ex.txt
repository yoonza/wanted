- 상태관리 툴의 종류!

1. ContextAPI() : 리액트가 제공함. / 기본 상태관리 라이브러리 정도로 생각하자.
2. Redux : 리액트에서 가장 많이 사용하는 도구 
3. Recoil : 다소 많이 사용
4. zustand : 가장 가벼운 전역 상태관리 도구 
5. react-query : API 요청 등에 쓰는 상태 관리 도구 
6. mobx : 이제 사용 안함.(이제 사용하지 않음.)

❗️ 무조건적으로 모든 데이터에 상태 관리를 하는 것은 좋지 않음 - 많은 메모리 소비 - 최적화에 좋지 않음! 
필요한 프로젝트에서만 전역 상태 관리를 요구함 (당위성X)

- 전역 상태를 변경할 때, 필요한 두가지 !
1. 전역 상태가 필요하고 
2. 바꿔주는 일을 수행하는 친구가 필요해. 
+ 전역 상태를 주입하는 친구 : Provider
+ Provider가 주입해준 데이터를 가져다 쓰는 친구 : Consumer

❗️ App 내에 다양한 계층적 요소들이 존재하는 데, 전역 상태에 해당 데이터들을 저장해놓으면
각 요소들이 소멸되어도 데이터 값들이 삭제되지 않고 보존될 수 있다.( 유지 !! )

- Provider 사용 구조 -
< 어떤 데이터 저장소.provider>
    <components1/>
    <components2/>

<consumer> 
</consumer>

Q. 전역 상태 관리 라이브러리를 사용하면 세션이나 로컬 스토리지에는 저장하지 못하고 무조건 메모리에만 올라갈까 ? 
- 메모리에만 올라가는 것이 기본이지만, 세션이나 로컬에도 같이 저장해 줄 수 있는 툴을 사용하면 저장할 수 있다. 
- Toast ui 웹페이지에서 브라우저의 앞으로의 업테이트 사항을 상시 챙겨보는 것이 좋음. 
- 유저의 정보를 로션/ 세션 / 쿠키에 저장하는 것을 점점 지양하고 축소해가고 있음. 


- 리액트 리덕스와 리덕스 툴킷을 설치하는 방법!  
<< 설치할 디렉토리로 이동하여 두 개의 코드를 실행하자 ! >>
1. VS code의 터미널 창에  $ yarn add redux reace-redux 입력 
2. 리덕스 툴킷도 함께 설치(리덕스 사용을 편리하게 함.) $ yarn add @redusjs/toolkit redux react-redux redux-logger

- 그럼 리덕스는 뭘까 ? 
: 리액트에서 많이 사용하는 도구이다 
: 전역 상태 관리를 할 때 사용하는 패키지 도구이다. 

- 상태 관리 흐름도 
1. Store와 컴포넌트로 구성됨 
2. Store - 데이터가 들어가는 곳 / Reducer : 데이터 값을 새로운 데이터 값으로 변환해주는 공간 (데이터 값을 바꾸는 행위 : Action)
3. 변환된 값을 사용하는 행위 : 구독 

