1. 가상 api 만들기 
2. 뷰 만들기 
3. 네트워크 요청하기 
4. 응답 받아오기 
5. Localstorage에 저장하기 

의존관계(의존성) - 어떤 것에 대한 기능을 빌려쓰고 있는 것 (a,b에서 a의 기능을 b에서 빌려쓸 수 있다)

// yarn add styled-components - styled-components 컴포넌트 스타일 설치 

// styled-div는 app.js 안에 들어가있으면 가독성을 떨어뜨림  (아래로 빼주자)

// 기업과제 첫번째 - 코드만 깃허브에 자료는 유출하면 안됨 
1. 뷰 짜야해 
2. 뷰 짜야하는데 뭐뭐 짜는지 결정하기(헤더 공통 컴포넌트, 페이지는 두개 ) - page / shared component- header / cards(lists)- component 공통 + 5번째 쉘은 광고이므로 list or 공통 list폴더 안에는 (Ad.jsx, list.jsx)
view - detail 페이지 구성 / 이미지 / 
네트워크 - 폴더 안에 fetch/axios에 관한 클라이언트 생성
라우터 
상태관리 - contextapi 사용 (store)
3. 라우팅을 해야한다  - 4/10 숙제 
4. 네트워크 요청 
5. 받아온 데이터 스토어에 넣어줘야해 - contextapi 쓰기 
6. 뷰에다가 데이터 뿌리기
7. 스타일 만져야해 (styled-components 사용) 

// textcomponent 만들어보기 - testcomp.jsx

const testcomp = (props) => {
    return ( 
        <InnerDiv>
    )
}

export default testcomp;